from logging.config import fileConfig
from sqlalchemy import engine_from_config, pool
from alembic import context
import os
from dotenv import load_dotenv
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª –∏–º–ø–æ—Ä—Ç
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv()

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏
from app.main import SQLModel
from sqlalchemy import create_engine  # ‚ùó sync-–¥–≤–∏–∂–æ–∫ –¥–ª—è Alembic

# Alembic config
config = context.config
fileConfig(config.config_file_name)
config.set_main_option("sqlalchemy.url", os.getenv("DATABASE_URL"))  # –∏–ª–∏ SYNC_DATABASE_URL

# –£–∫–∞–∑—ã–≤–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
target_metadata = SQLModel.metadata

# üî∏ –í–æ—Ç —ç—Ç–æ ‚Äî —Ñ—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —á—É–∂–∏—Ö —Ç–∞–±–ª–∏—Ü
def include_object(object, name, type_, reflected, compare_to):
    if type_ == "table" and name not in target_metadata.tables:
        return False  # –ù–ï –≤–∫–ª—é—á–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
    return True

def run_migrations_offline() -> None:
    """Run migrations in 'offline' mode."""
    url = config.get_main_option("sqlalchemy.url")
    context.configure(
        url=url,
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={"paramstyle": "named"},
        include_object=include_object  # üî∏ –¥–æ–±–∞–≤–∏–ª–∏ —Å—é–¥–∞
    )

    with context.begin_transaction():
        context.run_migrations()

def run_migrations_online() -> None:
    """Run migrations in 'online' mode."""
    connectable = engine_from_config(
        config.get_section(config.config_ini_section),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )

    with connectable.connect() as connection:
        context.configure(
            connection=connection,
            target_metadata=target_metadata,
            compare_type=True,
            include_object=include_object  # üî∏ –¥–æ–±–∞–≤–∏–ª–∏ —Å—é–¥–∞
        )

        with context.begin_transaction():
            context.run_migrations()

# –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞
if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()

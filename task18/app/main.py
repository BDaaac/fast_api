from fastapi import FastAPI
from app.logger import setup_logger
from app.database import init_db
from prometheus_fastapi_instrumentator import Instrumentator
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
setup_logger()
logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = FastAPI(title="FastAPI + Monitoring")

# –ü—Ä–æ–º–µ—Ç–µ—É—Å –º–µ—Ç—Ä–∏–∫–∏
instrumentator = Instrumentator().instrument(app).expose(app)

@app.on_event("startup")
async def startup():
    logger.info("üöÄ Starting application...")
    await init_db()
    logger.info("‚úÖ Database initialized")

@app.get("/health")
async def health():
    logger.info("üîç /health check called")
    return {"status": "ok"}

@app.get("/")
def root():
    logger.info("üì• Root endpoint accessed")
    return {"msg": "Monitoring enabled"}
